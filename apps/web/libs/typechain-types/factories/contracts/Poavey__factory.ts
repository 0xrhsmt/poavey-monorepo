/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Poavey, PoaveyInterface } from "../../contracts/Poavey";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "semaphoreAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attendee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "EventAttended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "EventRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "answers",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "SurveyAnswered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "answers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "answerSurvey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "attendEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getAnswers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCommitments",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getSurveyOptions",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "attendee",
        type: "address",
      },
    ],
    name: "isAttendee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "isNullifierExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "surveyOptions",
        type: "string[]",
      },
    ],
    name: "registerEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "semaphore",
    outputs: [
      {
        internalType: "contract ISemaphore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a0c38038062001a0c833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b6118ed806200011f6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80632f482f2c116100665780632f482f2c146101955780633d881390146101b15780633f7ffba6146101e15780634ca173b6146101fd5780637b5d2534146102195761009e565b806303a2e628146100a35780630b791430146100d35780631bf23cde146101055780631e59e02a14610135578063256a7f6b14610165575b600080fd5b6100bd60048036038101906100b89190610e9e565b610237565b6040516100ca91906112ae565b60405180910390f35b6100ed60048036038101906100e89190610e39565b6102c3565b6040516100fc939291906113e4565b60405180910390f35b61011f600480360381019061011a9190610e62565b6102ed565b60405161012c91906112ae565b60405180910390f35b61014f600480360381019061014a9190610e39565b6103a5565b60405161015c919061128c565b60405180910390f35b61017f600480360381019061017a9190610e39565b610461565b60405161018c919061126a565b60405180910390f35b6101af60048036038101906101aa9190610eda565b61059e565b005b6101cb60048036038101906101c69190610e39565b61080d565b6040516101d8919061128c565b60405180910390f35b6101fb60048036038101906101f69190610f46565b6108c9565b005b61021760048036038101906102129190610e9e565b610a8e565b005b610221610ce0565b60405161022e91906112c9565b60405180910390f35b600080600160008581526020019081526020016000209050600081600001541415610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e906112e4565b60405180910390fd5b80600401600084815260200190815260200160002060009054906101000a900460ff1691505092915050565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60008060016000858152602001908152602001600020905060008160000154141561034d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344906112e4565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60606000600160008481526020019081526020016000209050600081600001541415610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd906112e4565b60405180910390fd5b8060070180548060200260200160405190810160405280929190818152602001828054801561045457602002820191906000526020600020905b815481526020019060010190808311610440575b5050505050915050919050565b606060006001600084815260200190815260200160002090506000816000015414156104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b9906112e4565b60405180910390fd5b80600501805480602002602001604051908101604052809291908181526020016000905b8282101561059257838290600052602060002001805461050590611671565b80601f016020809104026020016040519081016040528092919081815260200182805461053190611671565b801561057e5780601f106105535761010080835404028352916020019161057e565b820191906000526020600020905b81548152906001019060200180831161056157829003601f168201915b5050505050815260200190600101906104e6565b50505050915050919050565b60008282905014156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc90611304565b60405180910390fd5b6000336001436105f59190611573565b4060405160200161060792919061123e565b6040516020818303038152906040528051906020012060001c905060006001600083815260200190815260200160002090506000816000015414610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067790611324565b60405180910390fd5b81816000018190555085816002018190555084816001018190555060005b8484905081101561074557816005018585838181106106e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020028101906106f8919061147d565b90918060018154018082558091505060019003906000526020600020016000909192909192909192909192509190610731929190610d04565b50808061073d906116a3565b91505061069e565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639c112141866014306040518463ffffffff1660e01b81526004016107a493929190611384565b600060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050508486837fda7d5c4152168ca474e5ce66896aaf64975f6ce54a3366f2d54c964c7946550460405160405180910390a4505050505050565b6060600060016000848152602001908152602001600020905060008160000154141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906112e4565b60405180910390fd5b806006018054806020026020016040519081016040528092919081815260200182805480156108bc57602002820191906000526020600020905b8154815260200190600101908083116108a8575b5050505050915050919050565b6000600160008781526020019081526020016000209050600081600001541415610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f906112e4565b60405180910390fd5b80600401600084815260200190815260200160002060009054906101000a900460ff161561098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098290611344565b60405180910390fd5b8060070185908060018154018082558091505060019003906000526020600020016000909190919091505560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc778e382600101548688878660010154886040518763ffffffff1660e01b8152600401610a219695949392919061141b565b600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b50505050806001015485877f3ad67c9b42b635dcd6eead21a067f904ee5470bb8842fd4b567e5e687c86c2a660405160405180910390a4505050505050565b6000600160008481526020019081526020016000209050600081600001541415610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae4906112e4565b60405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390611364565b60405180910390fd5b60018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060060182908060018154018082558091505060019003906000526020600020016000909190919091505560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631783efc38260010154846040518363ffffffff1660e01b8152600401610c609291906113bb565b600060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b5050505080600101543373ffffffffffffffffffffffffffffffffffffffff16847f35bcd533364266ba0b611b2a0ac7337d795b43842ab09592da11e3929e20aa5960405160405180910390a4505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054610d1090611671565b90600052602060002090601f016020900481019282610d325760008555610d79565b82601f10610d4b57803560ff1916838001178555610d79565b82800160010185558215610d79579182015b82811115610d78578235825591602001919060010190610d5d565b5b509050610d869190610d8a565b5090565b5b80821115610da3576000816000905550600101610d8b565b5090565b600081359050610db681611889565b92915050565b60008083601f840112610dce57600080fd5b8235905067ffffffffffffffff811115610de757600080fd5b602083019150836020820283011115610dff57600080fd5b9250929050565b600081905082602060080282011115610e1e57600080fd5b92915050565b600081359050610e33816118a0565b92915050565b600060208284031215610e4b57600080fd5b6000610e5984828501610e24565b91505092915050565b60008060408385031215610e7557600080fd5b6000610e8385828601610e24565b9250506020610e9485828601610da7565b9150509250929050565b60008060408385031215610eb157600080fd5b6000610ebf85828601610e24565b9250506020610ed085828601610e24565b9150509250929050565b60008060008060608587031215610ef057600080fd5b6000610efe87828801610e24565b9450506020610f0f87828801610e24565b935050604085013567ffffffffffffffff811115610f2c57600080fd5b610f3887828801610dbc565b925092505092959194509250565b60008060008060006101808688031215610f5f57600080fd5b6000610f6d88828901610e24565b9550506020610f7e88828901610e24565b9450506040610f8f88828901610e24565b9350506060610fa088828901610e24565b9250506080610fb188828901610e06565b9150509295509295909350565b6000610fca8383611138565b905092915050565b6000610fde8383611220565b60208301905092915050565b610ff3816115a7565b82525050565b61100a611005826115a7565b6116ec565b82525050565b600061101b826114f4565b611025818561152f565b935083602082028501611037856114d4565b8060005b8581101561107357848403895281516110548582610fbe565b945061105f83611515565b925060208a0199505060018101905061103b565b50829750879550505050505092915050565b611092610100838361162f565b5050565b60006110a1826114ff565b6110ab8185611540565b93506110b6836114e4565b8060005b838110156110e75781516110ce8882610fd2565b97506110d983611522565b9250506001810190506110ba565b5085935050505092915050565b6110fd816115b9565b82525050565b61111461110f826115c5565b6116fe565b82525050565b611123816115f9565b82525050565b6111328161161d565b82525050565b60006111438261150a565b61114d8185611551565b935061115d81856020860161163e565b61116681611778565b840191505092915050565b600061117e601c83611562565b915061118982611796565b602082019050919050565b60006111a1602683611562565b91506111ac826117bf565b604082019050919050565b60006111c4601c83611562565b91506111cf8261180e565b602082019050919050565b60006111e7601883611562565b91506111f282611837565b602082019050919050565b600061120a601883611562565b915061121582611860565b602082019050919050565b611229816115ef565b82525050565b611238816115ef565b82525050565b600061124a8285610ff9565b60148201915061125a8284611103565b6020820191508190509392505050565b600060208201905081810360008301526112848184611010565b905092915050565b600060208201905081810360008301526112a68184611096565b905092915050565b60006020820190506112c360008301846110f4565b92915050565b60006020820190506112de600083018461111a565b92915050565b600060208201905081810360008301526112fd81611171565b9050919050565b6000602082019050818103600083015261131d81611194565b9050919050565b6000602082019050818103600083015261133d816111b7565b9050919050565b6000602082019050818103600083015261135d816111da565b9050919050565b6000602082019050818103600083015261137d816111fd565b9050919050565b6000606082019050611399600083018661122f565b6113a66020830185611129565b6113b36040830184610fea565b949350505050565b60006040820190506113d0600083018561122f565b6113dd602083018461122f565b9392505050565b60006060820190506113f9600083018661122f565b611406602083018561122f565b611413604083018461122f565b949350505050565b60006101a082019050611431600083018961122f565b61143e602083018861122f565b61144b604083018761122f565b611458606083018661122f565b611465608083018561122f565b61147260a0830184611085565b979650505050505050565b6000808335600160200384360303811261149657600080fd5b80840192508235915067ffffffffffffffff8211156114b457600080fd5b6020830192506001820236038313156114cc57600080fd5b509250929050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061157e826115ef565b9150611589836115ef565b92508282101561159c5761159b61171a565b5b828203905092915050565b60006115b2826115cf565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116048261160b565b9050919050565b6000611616826115cf565b9050919050565b6000611628826115ef565b9050919050565b82818337600083830152505050565b60005b8381101561165c578082015181840152602081019050611641565b8381111561166b576000848401525b50505050565b6000600282049050600182168061168957607f821691505b6020821081141561169d5761169c611749565b5b50919050565b60006116ae826115ef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116e1576116e061171a565b5b600182019050919050565b60006116f782611708565b9050919050565b6000819050919050565b600061171382611789565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f506f617665793a206576656e7420646f6573206e6f7420657869737400000000600082015250565b7f506f617665793a20737572766579206f7074696f6e732063616e6e6f7420626560008201527f20656d7074790000000000000000000000000000000000000000000000000000602082015250565b7f506f617665793a206576656e7420616c72656164792065786973747300000000600082015250565b7f506f617665793a20616c726561647920616e7377657265640000000000000000600082015250565b7f506f617665793a20616c726561647920617474656e6465640000000000000000600082015250565b611892816115a7565b811461189d57600080fd5b50565b6118a9816115ef565b81146118b457600080fd5b5056fea26469706673582212205c84d64b7b79514ac91e6212d039191280235dbcea077e3d8a0bf508f136b29e64736f6c63430008040033";

type PoaveyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoaveyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Poavey__factory extends ContractFactory {
  constructor(...args: PoaveyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    semaphoreAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Poavey> {
    return super.deploy(semaphoreAddress, overrides || {}) as Promise<Poavey>;
  }
  override getDeployTransaction(
    semaphoreAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(semaphoreAddress, overrides || {});
  }
  override attach(address: string): Poavey {
    return super.attach(address) as Poavey;
  }
  override connect(signer: Signer): Poavey__factory {
    return super.connect(signer) as Poavey__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoaveyInterface {
    return new utils.Interface(_abi) as PoaveyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Poavey {
    return new Contract(address, _abi, signerOrProvider) as Poavey;
  }
}
