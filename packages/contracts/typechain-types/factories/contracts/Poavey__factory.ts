/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Poavey, PoaveyInterface } from "../../contracts/Poavey";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "semaphoreAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attendee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "EventAttended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "EventRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "answers",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "SurveyAnswered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "answers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "merkleTreeRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "answerSurvey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "attendEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCommitments",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "attendee",
        type: "address",
      },
    ],
    name: "isAttendee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "isNullifierExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "registerEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "semaphore",
    outputs: [
      {
        internalType: "contract ISemaphore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001207380380620012078339818101604052810190610034919061008f565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610101565b600081519050610089816100ea565b92915050565b6000602082840312156100a157600080fd5b60006100af8482850161007a565b91505092915050565b60006100c3826100ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f3816100b8565b81146100fe57600080fd5b50565b6110f680620001116000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633f7ffba61161005b5780633f7ffba61461014f5780634ca173b61461016b5780637b5d2534146101875780638aeec5bc146101a557610088565b806303a2e6281461008d5780630b791430146100bd5780631bf23cde146100ef5780633d8813901461011f575b600080fd5b6100a760048036038101906100a29190610a23565b6101c1565b6040516100b49190610cc0565b60405180910390f35b6100d760048036038101906100d291906109be565b61024d565b6040516100e693929190610dd6565b60405180910390f35b610109600480360381019061010491906109e7565b610277565b6040516101169190610cc0565b60405180910390f35b610139600480360381019061013491906109be565b61032f565b6040516101469190610c9e565b60405180910390f35b61016960048036038101906101649190610a5f565b6103eb565b005b61018560048036038101906101809190610a23565b610585565b005b61018f6107d7565b60405161019c9190610cdb565b60405180910390f35b6101bf60048036038101906101ba9190610a23565b6107fb565b005b600080600160008581526020019081526020016000209050600081600001541415610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610cf6565b60405180910390fd5b80600401600084815260200190815260200160002060009054906101000a900460ff1691505092915050565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b6000806001600085815260200190815260200160002090506000816000015414156102d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ce90610cf6565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60606000600160008481526020019081526020016000209050600081600001541415610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610cf6565b60405180910390fd5b806005018054806020026020016040519081016040528092919081815260200182805480156103de57602002820191906000526020600020905b8154815260200190600101908083116103ca575b5050505050915050919050565b600060016000878152602001908152602001600020905060008160000154141561044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190610cf6565b60405180910390fd5b80600401600084815260200190815260200160002060009054906101000a900460ff16156104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610d36565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bc778e382600101548688878660010154886040518763ffffffff1660e01b815260040161051896959493929190610e0d565b600060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b50505050806001015485877f3ad67c9b42b635dcd6eead21a067f904ee5470bb8842fd4b567e5e687c86c2a660405160405180910390a4505050505050565b60006001600084815260200190815260200160002090506000816000015414156105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90610cf6565b60405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90610d56565b60405180910390fd5b60018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060050182908060018154018082558091505060019003906000526020600020016000909190919091505560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631783efc38260010154846040518363ffffffff1660e01b8152600401610757929190610dad565b600060405180830381600087803b15801561077157600080fd5b505af1158015610785573d6000803e3d6000fd5b5050505080600101543373ffffffffffffffffffffffffffffffffffffffff16847f35bcd533364266ba0b611b2a0ac7337d795b43842ab09592da11e3929e20aa5960405160405180910390a4505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003360014361080b9190610eb9565b4060405160200161081d929190610c72565b6040516020818303038152906040528051906020012060001c905060006001600083815260200190815260200160002090506000816000015414610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d90610d16565b60405180910390fd5b81816000018190555083816002018190555082816001018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639c112141846014306040518463ffffffff1660e01b815260040161090f93929190610d76565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050508284837fda7d5c4152168ca474e5ce66896aaf64975f6ce54a3366f2d54c964c7946550460405160405180910390a450505050565b60008135905061098581611092565b92915050565b6000819050826020600802820111156109a357600080fd5b92915050565b6000813590506109b8816110a9565b92915050565b6000602082840312156109d057600080fd5b60006109de848285016109a9565b91505092915050565b600080604083850312156109fa57600080fd5b6000610a08858286016109a9565b9250506020610a1985828601610976565b9150509250929050565b60008060408385031215610a3657600080fd5b6000610a44858286016109a9565b9250506020610a55858286016109a9565b9150509250929050565b60008060008060006101808688031215610a7857600080fd5b6000610a86888289016109a9565b9550506020610a97888289016109a9565b9450506040610aa8888289016109a9565b9350506060610ab9888289016109a9565b9250506080610aca8882890161098b565b9150509295509295909350565b6000610ae38383610c54565b60208301905092915050565b610af881610eed565b82525050565b610b0f610b0a82610eed565b610f84565b82525050565b610b226101008383610f75565b5050565b6000610b3182610e7f565b610b3b8185610e97565b9350610b4683610e6f565b8060005b83811015610b77578151610b5e8882610ad7565b9750610b6983610e8a565b925050600181019050610b4a565b5085935050505092915050565b610b8d81610eff565b82525050565b610ba4610b9f82610f0b565b610f96565b82525050565b610bb381610f3f565b82525050565b610bc281610f63565b82525050565b6000610bd5601c83610ea8565b9150610be082610fee565b602082019050919050565b6000610bf8601c83610ea8565b9150610c0382611017565b602082019050919050565b6000610c1b601883610ea8565b9150610c2682611040565b602082019050919050565b6000610c3e601883610ea8565b9150610c4982611069565b602082019050919050565b610c5d81610f35565b82525050565b610c6c81610f35565b82525050565b6000610c7e8285610afe565b601482019150610c8e8284610b93565b6020820191508190509392505050565b60006020820190508181036000830152610cb88184610b26565b905092915050565b6000602082019050610cd56000830184610b84565b92915050565b6000602082019050610cf06000830184610baa565b92915050565b60006020820190508181036000830152610d0f81610bc8565b9050919050565b60006020820190508181036000830152610d2f81610beb565b9050919050565b60006020820190508181036000830152610d4f81610c0e565b9050919050565b60006020820190508181036000830152610d6f81610c31565b9050919050565b6000606082019050610d8b6000830186610c63565b610d986020830185610bb9565b610da56040830184610aef565b949350505050565b6000604082019050610dc26000830185610c63565b610dcf6020830184610c63565b9392505050565b6000606082019050610deb6000830186610c63565b610df86020830185610c63565b610e056040830184610c63565b949350505050565b60006101a082019050610e236000830189610c63565b610e306020830188610c63565b610e3d6040830187610c63565b610e4a6060830186610c63565b610e576080830185610c63565b610e6460a0830184610b15565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ec482610f35565b9150610ecf83610f35565b925082821015610ee257610ee1610fb2565b5b828203905092915050565b6000610ef882610f15565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f4a82610f51565b9050919050565b6000610f5c82610f15565b9050919050565b6000610f6e82610f35565b9050919050565b82818337600083830152505050565b6000610f8f82610fa0565b9050919050565b6000819050919050565b6000610fab82610fe1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b7f506f617665793a206576656e7420646f6573206e6f7420657869737400000000600082015250565b7f506f617665793a206576656e7420616c72656164792065786973747300000000600082015250565b7f506f617665793a20616c726561647920616e7377657265640000000000000000600082015250565b7f506f617665793a20616c726561647920617474656e6465640000000000000000600082015250565b61109b81610eed565b81146110a657600080fd5b50565b6110b281610f35565b81146110bd57600080fd5b5056fea26469706673582212208d0fb0892403efc2b9e5251b97f59e82fe6808017d218f00676d38d9d76562fb64736f6c63430008040033";

type PoaveyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoaveyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Poavey__factory extends ContractFactory {
  constructor(...args: PoaveyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    semaphoreAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Poavey> {
    return super.deploy(semaphoreAddress, overrides || {}) as Promise<Poavey>;
  }
  override getDeployTransaction(
    semaphoreAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(semaphoreAddress, overrides || {});
  }
  override attach(address: string): Poavey {
    return super.attach(address) as Poavey;
  }
  override connect(signer: Signer): Poavey__factory {
    return super.connect(signer) as Poavey__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoaveyInterface {
    return new utils.Interface(_abi) as PoaveyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Poavey {
    return new Contract(address, _abi, signerOrProvider) as Poavey;
  }
}
